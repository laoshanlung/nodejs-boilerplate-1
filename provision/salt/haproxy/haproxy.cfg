{% set timeout = ['client', 'server', 'connect', 'queue'] -%}
{% set default_timeout = {
    'client': '10s',
    'server': '10s',
    'connect': '4s',
    'queue': '10s'
} -%}
global
    chroot /var/lib/haproxy
    {% set global = haproxy.get('global', {}) %}
    maxconn {{ global.get('maxconn', 300000) }}
    nbproc {{ global.get('nbproc', 1) }}
    pidfile {{ global.get('pidfile', '/var/run/haproxy.pid') }}
    user {{ global.get('user', 'haproxy') }}
    group {{ global.get('user', 'haproxy') }}
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    daemon

    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    mode http
    {% set defaults = haproxy.get('defaults', {}) -%}
    {% set custom_default_timeout = defaults.get('timeout', {}) -%}
    {% for t in timeout %}
    timeout {{ t }} {{ custom_default_timeout.get(t, default_timeout.get(t)) }}
    {%- endfor %}
    retries {{ defaults.get('retries', 3) }}
    option redispatch

{% set stats = haproxy.get('stats', {}) -%}
{% if stats.get('enable', False) %}
listen stats :{{ stats.get('port', 3333) }}
    mode http
    maxconn 100
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri {{ stats.get('uri', '/') }}

    {% for auth in stats.get('auth', []) %}
    stats auth {{ auth['username'] }}:{{ auth['password'] }}
    {% endfor %}
{% endif -%}

{%- for frontend in haproxy.get('frontend', []) -%}
frontend {{ frontend.get('name') }}
    bind {{ frontend.get('bind') }}
    {% for option in frontend.get('option', []) %}
    option {{ option }}
    {%- endfor %}

    rspadd P3P:\ CP="This\ is\ not\ a\ P3P\ policy!\ See\ http://chatab.com/privacy\ for\ more\ info"
    rspadd Access-Control-Allow-Origin:\ *

    default_backend {{ frontend.get('default_backend') }}

    {%- for acl in frontend.get('acl', []) %}
    acl {{ acl }}
    {%- endfor %}

    {%- for use_backend in frontend.get('use_backend', []) %}
    use_backend {{ use_backend }}
    {%- endfor %}
{% endfor %}

{%- for backend in haproxy.get('backend', []) %}
backend {{ backend.get('name') }}
    balance {{ backend.get('balance', 'roundrobin') }}

    {%- for key, value in backend.get('timeout', {}).iteritems() %}
    timeout {{ key }} {{ value }}
    {%- endfor %}

    {%- for server in backend.get('server', {}).get('active', []) %}
    server {{ server.get('name') }} {{ server.get('host') }}:{{ server.get('port') }} weight {{ server.get('weight') }} maxconn {{ server.get('maxconn') }} check
    {%- endfor %}

    {%- for server in backend.get('server', {}).get('backup', []) %}
    server {{ server.get('name') }} {{ server.get('host') }}:{{ server.get('port') }} weight {{ server.get('weight') }} maxconn {{ server.get('maxconn') }} backup
    {%- endfor %}
{% endfor %}